<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/data/jpa
						http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<jpa:repositories base-package="br.cnpq.pdtic.necessidades"
		entity-manager-factory-ref="emf" />

	<tx:annotation-driven />
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="emf" />
		<property name="dataSource" ref="dataSource" />

	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
<!-- 
		<property name="url" value="jdbc:oracle:thin:@(DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = SIG1-vip.cnpq.br)(PORT = 1521)) (ADDRESS = (PROTOCOL = TCP)(HOST = SIG2-vip.cnpq.br)(PORT = 1521)) (ADDRESS = (PROTOCOL = TCP)(HOST = SIG3-vip.cnpq.br)(PORT = 1521)) (ADDRESS = (PROTOCOL = TCP)(HOST = SIG4-vip.cnpq.br)(PORT = 1521)) (ADDRESS = (PROTOCOL = TCP)(HOST = SIG5-vip.cnpq.br)(PORT = 1521)) (LOAD_BALANCE = yes) (FAILOVER = ON) (CONNECT_DATA = (SERVICE_NAME = SIG.cnpq.br) (FAILOVER_MODE = (TYPE = SELECT) (METHOD = BASIC) (RETRIES = 180) (DELAY = 5)) ))"></property>
		<property name="url" value="jdbc:oracle:thin:@(DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = srv301-vip.cnpq.br)(PORT = 1521)) (ADDRESS = (PROTOCOL = TCP)(HOST = srv302-vip.cnpq.br)(PORT = 1521)) (ADDRESS = (PROTOCOL = TCP)(HOST = srv303-vip.cnpq.br)(PORT = 1521)) (ADDRESS = (PROTOCOL = TCP)(HOST = srv304-vip.cnpq.br)(PORT = 1521)) (ADDRESS = (PROTOCOL = TCP)(HOST = srv305-vip.cnpq.br)(PORT = 1521)) (ADDRESS = (PROTOCOL = TCP)(HOST = srv306-vip.cnpq.br)(PORT = 1521)) (LOAD_BALANCE = yes) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = siguser.cnpq.br) (FAILOVER_MODE = (TYPE = SELECT) (METHOD = BASIC) (RETRIES = 180) (DELAY = 5) ) ) )"></property>
		
		;SetBigStringTryClob=true; oracle.net.READ_TIMEOUT=5000;
 -->
        <property name="initialSize" value="2"/>
        <property name="minIdle" value="2"/>
        <property name="maxIdle" value="2"/>
        <property name="maxActive" value="3"/>
        <property name="maxWait" value="5000"/>
<!--
         <property name="validationQuery" value="select 1 from dual"/>
 -->        
        <property name="removeAbandoned" value="true"/>


        

		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- <property name="persistenceUnitName" value="Sivalabs1PU"></property> 
			<property name="persistenceUnitName" value="pdticPU"></property> -->
		<property name="dataSource" ref="dataSource">
		</property>
		<property name="jpaVendorAdapter">
			<bean id="jpaAdapter"
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>

		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- change this to 'verify' before running as a production app 
				<prop key="hibernate.default_schema">${hibernate.default_schema}</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop> 
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				-->
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.hbm2ddl.import_files">cargaInicial.sql</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>

			</props>
		</property>
		<!-- -->

		<!-- <property name="packagesToScan" value="br.cnpq.pdtic.necessidades"></property> 
			<property name="loadTimeWeaver"> <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/> 
			</property> -->
	</bean>



	<!-- <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> 
		<property name="entityManagerFactory" ref="emf" /> </bean> <tx:annotation-driven 
		transaction-manager="transactionManager" /> <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/> -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="usuarioServico" class="br.cnpq.pdtic.necessidades.services.UsuarioServico" />
</beans>
